  val drmNtnonEmpty = drmNt.allreduceBlock(

    {
      case (keys, block) =>
        val vectors = Seq[(Int, Vector)]()
        for (i <- 0 until keys.size()) {
          if (block(keys(i), ::).getNumNondefaultElements > 0) {
            vectors.add(i, ((keys(i), block(keys(i), ::))))
          }          
        }        
        val keysB = Array[Int](vectors.size)
        val blockB = block,like(vectors.size, vectors(0)._2.size())
        for(i <- 0 until keysB.size){
          keysB(i) = vectors(i)._1
          blockB(vectors(i)._1,::) ::= vectors(i)._2          
        }
      keysB -> blockB
    },
     _ rbind _
    )

